// Code generated by generator, DO NOT EDIT.
package pb

import (
	"regexp"
	"strings"
)

func (re *ResumeEntity) Vet() (*ResumeEntity, error) {
	var (
		fv         string
		fvb        []byte
		resErr     error
		res        = &ResumeEntity{}
		reBreakers = regexp.MustCompile(`<.*>`)
		reSymbols  = regexp.MustCompile("['\"<>/()\\[\\];:*{}!?=\\-+_~`$^&#â„–%\\\\]")
		reSpaces   = regexp.MustCompile(`\s+`)
	)
	res.Id = re.Id
	fv = re.Name
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.Name = fv
	res.Active = re.Active
	res.CreatedAt = re.CreatedAt
	res.UpdatedAt = re.UpdatedAt
	fv = re.JobName
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.JobName = fv
	fv = re.JobDescDuties
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.JobDescDuties = fv
	fv = re.JobDescAchievements
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.JobDescAchievements = fv
	fv = re.CompanyName
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.CompanyName = fv
	fv = re.InstituteName
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.InstituteName = fv
	fv = re.CertificateName
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.CertificateName = fv
	res.CustomerId = re.CustomerId
	res.Languages = re.Languages
	res.SalaryCurr = re.SalaryCurr
	res.PaymentPeriod = re.PaymentPeriod
	res.Industries = re.Industries
	res.BusinessTrip = re.BusinessTrip
	res.DefaultWorkType = re.DefaultWorkType
	res.RegularTrip = re.RegularTrip
	res.WorkLicense = re.WorkLicense
	res.ResumeLanguage = re.ResumeLanguage
	res.Metro = re.Metro
	res.WorkType = re.WorkType
	res.AdditionalCalcForm = re.AdditionalCalcForm
	fv = re.AboutShort
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.AboutShort = fv
	res.Salary = re.Salary
	fv = re.Skills
	fv = reBreakers.ReplaceAllString(fv, "")
	fvb = reSymbols.ReplaceAll([]byte(fv), []byte(""))
	fvb = reSpaces.ReplaceAll([]byte(fvb), []byte(" "))
	fv = strings.TrimSpace(string(fvb))
	res.Skills = fv
	res.City = re.City
	res.Specialization = re.Specialization
	res.Status = re.Status
	if resErr != nil {
		return nil, resErr
	}
	return res, nil
}
