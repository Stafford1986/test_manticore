// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: search-vacancy.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// swagger:model vacancyEntity
type VacancyEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id"`                                                                           // @gotags: db:"id"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name,index"`                                                                        // @gotags: db:"name,index"
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty" db:"active"`                                                                   // @gotags: db:"active"
	CreatedAt            uint64   `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" db:"created_at"`                                            // @gotags: db:"created_at"
	UpdatedAt            uint64   `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at"`                                            // @gotags: db:"updated_at"
	Requirement          string   `protobuf:"bytes,7,opt,name=requirement,proto3" json:"requirement,omitempty" db:"requirement,index"`                                                          // @gotags: db:"requirement,index"
	Salary               uint32   `protobuf:"varint,8,opt,name=salary,proto3" json:"salary,omitempty" db:"salary"`                                                                   // @gotags: db:"salary"
	Skills               string   `protobuf:"bytes,9,opt,name=skills,proto3" json:"skills,omitempty" db:"skills,index"`                                                                    // @gotags: db:"skills,index"
	City                 uint32   `protobuf:"varint,10,opt,name=city,proto3" json:"city,omitempty" db:"city,filter"`                                                                      // @gotags: db:"city,filter"
	CityLevel            uint32   `protobuf:"varint,11,opt,name=city_level,json=cityLevel,proto3" json:"city_level,omitempty" db:"city_level"`                                           // @gotags: db:"city_level"
	Brand                string   `protobuf:"bytes,12,opt,name=brand,proto3" json:"brand,omitempty" db:"brand,index"`                                                                     // @gotags: db:"brand,index"
	WebsiteUrl           string   `protobuf:"bytes,13,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty" db:"website_url"`                                         // @gotags: db:"website_url"
	Logo                 string   `protobuf:"bytes,14,opt,name=logo,proto3" json:"logo,omitempty" db:"logo"`                                                                       // @gotags: db:"logo"
	IndustryGroups       []uint32 `protobuf:"varint,15,rep,packed,name=industry_groups,json=industryGroups,proto3" json:"industry_groups,omitempty" db:"industry_groups,filter"`                     // @gotags: db:"industry_groups,filter"
	CompanyId            uint32   `protobuf:"varint,16,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty" db:"company_id"`                                           // @gotags: db:"company_id"
	Specialization       []uint32 `protobuf:"varint,17,rep,packed,name=specialization,proto3" json:"specialization,omitempty" db:"specialization,filter"`                                           // @gotags: db:"specialization,filter"
	Metro                []uint32 `protobuf:"varint,18,rep,packed,name=metro,proto3" json:"metro,omitempty" db:"metro,filter"`                                                             // @gotags: db:"metro,filter"
	SalaryBeforeTax      bool     `protobuf:"varint,20,opt,name=salary_before_tax,json=salaryBeforeTax,proto3" json:"salary_before_tax,omitempty" db:"salary_before_tax"`                       // @gotags: db:"salary_before_tax"
	SalaryCurr           uint32   `protobuf:"varint,21,opt,name=salary_curr,json=salaryCurr,proto3" json:"salary_curr,omitempty" db:"salary_curr"`                                        // @gotags: db:"salary_curr"
	JobResponsibility    string   `protobuf:"bytes,22,opt,name=job_responsibility,json=jobResponsibility,proto3" json:"job_responsibility,omitempty" db:"job_responsibility,index"`                    // @gotags: db:"job_responsibility,index"
	JobRequirement       string   `protobuf:"bytes,23,opt,name=job_requirement,json=jobRequirement,proto3" json:"job_requirement,omitempty" db:"job_requirement,index"`                             // @gotags: db:"job_requirement,index"
	WorkCondition        string   `protobuf:"bytes,24,opt,name=work_condition,json=workCondition,proto3" json:"work_condition,omitempty" db:"work_condition,index"`                                // @gotags: db:"work_condition,index"
	CityVisibility       []uint32 `protobuf:"varint,28,rep,packed,name=city_visibility,json=cityVisibility,proto3" json:"city_visibility,omitempty" db:"city_visibility,filter"`                     // @gotags: db:"city_visibility,filter"
	VacancyLanguage      uint32   `protobuf:"varint,29,opt,name=vacancy_language,json=vacancyLanguage,proto3" json:"vacancy_language,omitempty" db:"vacancy_language,filter"`                         // @gotags: db:"vacancy_language,filter"
	BusinessTrips        uint32   `protobuf:"varint,30,opt,name=business_trips,json=businessTrips,proto3" json:"business_trips,omitempty" db:"business_tripp,filter"`                               // @gotags: db:"business_tripp,filter"
	SelfEmployed         bool     `protobuf:"varint,31,opt,name=self_employed,json=selfEmployed,proto3" json:"self_employed,omitempty" db:"self_employed,filter"`                                  // @gotags: db:"self_employed,filter"
	IpEmployed           bool     `protobuf:"varint,32,opt,name=ip_employed,json=ipEmployed,proto3" json:"ip_employed,omitempty" db:"ip_employed,filter"`                                        // @gotags: db:"ip_employed,filter"
	PaymentPeriod        uint32   `protobuf:"varint,33,opt,name=payment_period,json=paymentPeriod,proto3" json:"payment_period,omitempty" db:"payment_period,filter"`                               // @gotags: db:"payment_period,filter"
	SalaryFrom           uint32   `protobuf:"varint,34,opt,name=salary_from,json=salaryFrom,proto3" json:"salary_from,omitempty" db:"salary_from,filter"`                                        // @gotags: db:"salary_from,filter"
	SalaryTo             uint32   `protobuf:"varint,35,opt,name=salary_to,json=salaryTo,proto3" json:"salary_to,omitempty" db:"salary_to,filter"`                                              // @gotags: db:"salary_to,filter"
	DefaultWorkType      uint32   `protobuf:"varint,36,opt,name=default_work_type,json=defaultWorkType,proto3" json:"default_work_type,omitempty" db:"default_work_type,filter"`                       // @gotags: db:"default_work_type,filter"
	WorkType             []uint32 `protobuf:"varint,37,rep,packed,name=work_type,json=workType,proto3" json:"work_type,omitempty" db:"work_type"`                                       // @gotags: db:"work_type"
	Experience           uint32   `protobuf:"varint,38,opt,name=experience,proto3" json:"experience,omitempty" db:"experience,filter"`                                                          // @gotags: db:"experience,filter"
	MinCustomerLanguages []uint32 `protobuf:"varint,39,rep,packed,name=min_customer_languages,json=minCustomerLanguages,proto3" json:"min_customer_languages,omitempty" db:"min_customer_languages,filter"` // @gotags: db:"min_customer_languages,filter"
	DriverLicense        []uint32 `protobuf:"varint,40,rep,packed,name=driver_license,json=driverLicense,proto3" json:"driver_license,omitempty" db:"driver_license,filter"`                        // @gotags: db:"driver_license,filter"
	DriverExp            uint32   `protobuf:"varint,41,opt,name=driver_exp,json=driverExp,proto3" json:"driver_exp,omitempty" db:"driver_exp,filter"`                                           // @gotags: db:"driver_exp,filter"
	HaveCar              bool     `protobuf:"varint,42,opt,name=have_car,json=haveCar,proto3" json:"have_car,omitempty" db:"have_car,filter"`                                                 // @gotags: db:"have_car,filter"
	Restrictions         []uint32 `protobuf:"varint,46,rep,packed,name=restrictions,proto3" json:"restrictions,omitempty" db:"restrictions,filter"`                                               // @gotags: db:"restrictions,filter"
	ListRespondButton    bool     `protobuf:"varint,47,opt,name=list_respond_button,json=listRespondButton,proto3" json:"list_respond_button,omitempty" db:"list_respond_button"`                 // @gotags: db:"list_respond_button"
}

func (x *VacancyEntity) Reset() {
	*x = VacancyEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_vacancy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VacancyEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VacancyEntity) ProtoMessage() {}

func (x *VacancyEntity) ProtoReflect() protoreflect.Message {
	mi := &file_search_vacancy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VacancyEntity.ProtoReflect.Descriptor instead.
func (*VacancyEntity) Descriptor() ([]byte, []int) {
	return file_search_vacancy_proto_rawDescGZIP(), []int{0}
}

func (x *VacancyEntity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VacancyEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VacancyEntity) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *VacancyEntity) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VacancyEntity) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *VacancyEntity) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

func (x *VacancyEntity) GetSalary() uint32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *VacancyEntity) GetSkills() string {
	if x != nil {
		return x.Skills
	}
	return ""
}

func (x *VacancyEntity) GetCity() uint32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *VacancyEntity) GetCityLevel() uint32 {
	if x != nil {
		return x.CityLevel
	}
	return 0
}

func (x *VacancyEntity) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *VacancyEntity) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *VacancyEntity) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *VacancyEntity) GetIndustryGroups() []uint32 {
	if x != nil {
		return x.IndustryGroups
	}
	return nil
}

func (x *VacancyEntity) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *VacancyEntity) GetSpecialization() []uint32 {
	if x != nil {
		return x.Specialization
	}
	return nil
}

func (x *VacancyEntity) GetMetro() []uint32 {
	if x != nil {
		return x.Metro
	}
	return nil
}

func (x *VacancyEntity) GetSalaryBeforeTax() bool {
	if x != nil {
		return x.SalaryBeforeTax
	}
	return false
}

func (x *VacancyEntity) GetSalaryCurr() uint32 {
	if x != nil {
		return x.SalaryCurr
	}
	return 0
}

func (x *VacancyEntity) GetJobResponsibility() string {
	if x != nil {
		return x.JobResponsibility
	}
	return ""
}

func (x *VacancyEntity) GetJobRequirement() string {
	if x != nil {
		return x.JobRequirement
	}
	return ""
}

func (x *VacancyEntity) GetWorkCondition() string {
	if x != nil {
		return x.WorkCondition
	}
	return ""
}

func (x *VacancyEntity) GetCityVisibility() []uint32 {
	if x != nil {
		return x.CityVisibility
	}
	return nil
}

func (x *VacancyEntity) GetVacancyLanguage() uint32 {
	if x != nil {
		return x.VacancyLanguage
	}
	return 0
}

func (x *VacancyEntity) GetBusinessTrips() uint32 {
	if x != nil {
		return x.BusinessTrips
	}
	return 0
}

func (x *VacancyEntity) GetSelfEmployed() bool {
	if x != nil {
		return x.SelfEmployed
	}
	return false
}

func (x *VacancyEntity) GetIpEmployed() bool {
	if x != nil {
		return x.IpEmployed
	}
	return false
}

func (x *VacancyEntity) GetPaymentPeriod() uint32 {
	if x != nil {
		return x.PaymentPeriod
	}
	return 0
}

func (x *VacancyEntity) GetSalaryFrom() uint32 {
	if x != nil {
		return x.SalaryFrom
	}
	return 0
}

func (x *VacancyEntity) GetSalaryTo() uint32 {
	if x != nil {
		return x.SalaryTo
	}
	return 0
}

func (x *VacancyEntity) GetDefaultWorkType() uint32 {
	if x != nil {
		return x.DefaultWorkType
	}
	return 0
}

func (x *VacancyEntity) GetWorkType() []uint32 {
	if x != nil {
		return x.WorkType
	}
	return nil
}

func (x *VacancyEntity) GetExperience() uint32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *VacancyEntity) GetMinCustomerLanguages() []uint32 {
	if x != nil {
		return x.MinCustomerLanguages
	}
	return nil
}

func (x *VacancyEntity) GetDriverLicense() []uint32 {
	if x != nil {
		return x.DriverLicense
	}
	return nil
}

func (x *VacancyEntity) GetDriverExp() uint32 {
	if x != nil {
		return x.DriverExp
	}
	return 0
}

func (x *VacancyEntity) GetHaveCar() bool {
	if x != nil {
		return x.HaveCar
	}
	return false
}

func (x *VacancyEntity) GetRestrictions() []uint32 {
	if x != nil {
		return x.Restrictions
	}
	return nil
}

func (x *VacancyEntity) GetListRespondButton() bool {
	if x != nil {
		return x.ListRespondButton
	}
	return false
}

var File_search_vacancy_proto protoreflect.FileDescriptor

var file_search_vacancy_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xa5,
	0x0a, 0x0a, 0x0d, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65,
	0x74, 0x72, 0x6f, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x72, 0x6f,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x78, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x12, 0x2d, 0x0a,
	0x12, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f,
	0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x1c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x69, 0x74, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x69,
	0x70, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x54, 0x72, 0x69, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x65, 0x6c, 0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x70, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x70, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f,
	0x74, 0x6f, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x54, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x25, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x69, 0x6e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x76, 0x65, 0x43,
	0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x2f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_search_vacancy_proto_rawDescOnce sync.Once
	file_search_vacancy_proto_rawDescData = file_search_vacancy_proto_rawDesc
)

func file_search_vacancy_proto_rawDescGZIP() []byte {
	file_search_vacancy_proto_rawDescOnce.Do(func() {
		file_search_vacancy_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_vacancy_proto_rawDescData)
	})
	return file_search_vacancy_proto_rawDescData
}

var file_search_vacancy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_search_vacancy_proto_goTypes = []interface{}{
	(*VacancyEntity)(nil), // 0: search.VacancyEntity
}
var file_search_vacancy_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_search_vacancy_proto_init() }
func file_search_vacancy_proto_init() {
	if File_search_vacancy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_vacancy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VacancyEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_vacancy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_search_vacancy_proto_goTypes,
		DependencyIndexes: file_search_vacancy_proto_depIdxs,
		MessageInfos:      file_search_vacancy_proto_msgTypes,
	}.Build()
	File_search_vacancy_proto = out.File
	file_search_vacancy_proto_rawDesc = nil
	file_search_vacancy_proto_goTypes = nil
	file_search_vacancy_proto_depIdxs = nil
}
